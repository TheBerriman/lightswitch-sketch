{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/settings.js","webpack://exports/external \"sketch\""],"names":["sketch","require","document","getSelectedDocument","page","selectedPage","selection","selectedLayers","textFieldLight","textFieldDark","hexLight","hexDark","artboardsCheckbox","symbolsCheckbox","textLayersCheckbox","shapeLayersCheckbox","overridesCheckbox","groupsCheckbox","getInputFromUser","context","window","createWindow","alert","response","runModal","stringValue","test","trim","replace","UI","updateSettings","resetSettings","COSAlertWindow","new","setMessageText","addButtonWithTitle","viewWidth","viewHeight","viewSpacer","view","NSView","alloc","initWithFrame","NSMakeRect","addAccessoryView","infoLabel","NSTextField","lightBgLabel","darkBgLabel","toggleLabel","setStringValue","setSelectable","setEditable","setBezeled","setDrawsBackground","addSubview","defaultLightBg","Settings","settingForKey","defaultDarkBg","NSButton","defaultArtboard","NSOffState","NSOnState","setButtonType","NSSwitchButton","setBezelStyle","setTitle","setState","defaultSymbols","defaultTextLayers","defaultShapes","defaultOverrides","defaultGroups","setSettingForKey"],"mappings":"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","file":"settings.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/settings.js\");\n","const sketch = require('sketch');\nconst document = sketch.getSelectedDocument();\nconst page = document.selectedPage;\nconst selection = document.selectedLayers;\n\nvar textFieldLight, textFieldDark;\nvar hexLight, hexDark;\nvar artboardsCheckbox, symbolsCheckbox, textLayersCheckbox, shapeLayersCheckbox, overridesCheckbox, groupsCheckbox;\n\nexport function getInputFromUser(context){\n  // Create and show dialog window\n  var window = createWindow(context);\n  var alert = window[0];\n  var response = alert.runModal();\n  if (response == \"1000\") {\n\n    // Artboard background colours\n    hexLight = textFieldLight.stringValue();\n    hexDark = textFieldDark.stringValue();\n\n    // Validate colours for valid hex strings\n    if ((!/^[0-9A-F]{6}$/i.test(hexLight.trim().replace('#', ''))) || (!/^[0-9A-F]{6}$/i.test(hexDark.trim().replace('#', '')))) {\n      sketch.UI.alert('Cannot Save Changes', 'Invalid background color entered for Artboards');\n      getInputFromUser();\n      return;\n    }\n\n    // Toggle checkboxes\n    artboardsCheckbox = artboardsCheckbox.stringValue();\n    symbolsCheckbox = symbolsCheckbox.stringValue();\n    textLayersCheckbox = textLayersCheckbox.stringValue();\n    shapeLayersCheckbox = shapeLayersCheckbox.stringValue();\n    overridesCheckbox = overridesCheckbox.stringValue();\n    groupsCheckbox = groupsCheckbox.stringValue();\n\n    updateSettings();\n\n    return true;\n  } else if (response == \"1001\") {\n      resetSettings();\n      getInputFromUser();\n      return false;\n  } else if (response == \"1002\") {\n      return false;\n  }\n}\n\nexport function createWindow() {\n\n  var alert = COSAlertWindow.new();\n\n  //alert.setIcon(NSImage.alloc().initByReferencingFile(context.plugin.urlForResourceNamed('icon.png').path()));\n  alert.setMessageText(\"Light Switch Settings\");\n\n  // Creating dialog buttons\n  alert.addButtonWithTitle(\"Save\");\n  alert.addButtonWithTitle(\"Reset\");\n  alert.addButtonWithTitle(\"Cancel\");\n\n  // Creating the view\n  var viewWidth = 300;\n  var viewHeight = 205;\n  var viewSpacer = 10;\n  var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight));\n  alert.addAccessoryView(view);\n\n  // Create and configure your inputs here\n  // ...\n\n  // Create labels\n    var infoLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 52, (viewWidth - 30), 55));\n    var lightBgLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 105, (viewWidth - 30), 55));\n    var darkBgLabel = NSTextField.alloc().initWithFrame(NSMakeRect(140, viewHeight - 105, (viewWidth - 30), 55));\n    var toggleLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 163, (viewWidth - 30), 55));\n\n    // Configure labels\n    infoLabel.setStringValue(\"Change default artboard colors and disable switching specific layer types.\");\n    infoLabel.setSelectable(false);\n    infoLabel.setEditable(false);\n    infoLabel.setBezeled(false);\n    infoLabel.setDrawsBackground(false);\n\n    lightBgLabel.setStringValue(\"Light BG Color\");\n    lightBgLabel.setSelectable(false);\n    lightBgLabel.setEditable(false);\n    lightBgLabel.setBezeled(false);\n    lightBgLabel.setDrawsBackground(false);\n\n    darkBgLabel.setStringValue(\"Dark BG Color\");\n    darkBgLabel.setSelectable(false);\n    darkBgLabel.setEditable(false);\n    darkBgLabel.setBezeled(false);\n    darkBgLabel.setDrawsBackground(false);\n\n    toggleLabel.setStringValue(\"Switch Toggles:\");\n    toggleLabel.setSelectable(false);\n    toggleLabel.setEditable(false);\n    toggleLabel.setBezeled(false);\n    toggleLabel.setDrawsBackground(false);\n\n  // Add labels to window\n    view.addSubview(infoLabel);\n    view.addSubview(lightBgLabel);\n    view.addSubview(darkBgLabel);\n    view.addSubview(toggleLabel);\n\n\n\n  // Create text fields\n    textFieldLight = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 90, 120, 20));\n    textFieldDark = NSTextField.alloc().initWithFrame(NSMakeRect(140, viewHeight - 90, 120, 20));\n\n\n    // Optional: Make TAB key work to switch between textfields\n    //[textFieldLight setNextKeyView:textFieldDark];\n    //[textFieldDark setNextKeyView:textFieldLight];\n\n\n    // Add text fields to window\n    view.addSubview(textFieldLight);\n    view.addSubview(textFieldDark);\n\n\n    // Default text values\n    const defaultLightBg = sketch.Settings.settingForKey('lsLightBgColor') || '#ffffff';\n    const defaultDarkBg = sketch.Settings.settingForKey('lsDarkBgColor') || '#000000';\n    textFieldLight.setStringValue(defaultLightBg);\n    textFieldDark.setStringValue(defaultDarkBg);\n\n\n\n  // Create checkbox\n    artboardsCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 150, viewWidth - viewSpacer, 20));\n    symbolsCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(140, viewHeight - 150, viewWidth - viewSpacer, 20));\n    textLayersCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 172.5, viewWidth - viewSpacer, 20));\n    shapeLayersCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(140, viewHeight - 172.5, viewWidth - viewSpacer, 20));\n    overridesCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 195, viewWidth - viewSpacer, 20));\n    groupsCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(140, viewHeight - 195, viewWidth - viewSpacer, 20));\n\n\n    // Configure checkboxes\n    const defaultArtboard = (sketch.Settings.settingForKey('lsToggledArtboards') == 0) ? NSOffState : NSOnState;\n    artboardsCheckbox.setButtonType(NSSwitchButton);\n    artboardsCheckbox.setBezelStyle(0);\n    artboardsCheckbox.setTitle(\"Artboards\");\n    artboardsCheckbox.setState(defaultArtboard);\n\n    const defaultSymbols = (sketch.Settings.settingForKey('lsToggledSymbols') == 0) ? NSOffState : NSOnState;\n    symbolsCheckbox.setButtonType(NSSwitchButton);\n    symbolsCheckbox.setBezelStyle(0);\n    symbolsCheckbox.setTitle(\"Symbols\");\n    symbolsCheckbox.setState(defaultSymbols);\n\n    const defaultTextLayers = (sketch.Settings.settingForKey('lsToggledTextLayers') == 0) ? NSOffState : NSOnState;\n    textLayersCheckbox.setButtonType(NSSwitchButton);\n    textLayersCheckbox.setBezelStyle(0);\n    textLayersCheckbox.setTitle(\"Text Styles\");\n    textLayersCheckbox.setState(defaultTextLayers);\n\n    const defaultShapes = (sketch.Settings.settingForKey('lsToggledShapes') == 0) ? NSOffState : NSOnState;\n    shapeLayersCheckbox.setButtonType(NSSwitchButton);\n    shapeLayersCheckbox.setBezelStyle(0);\n    shapeLayersCheckbox.setTitle(\"Shape Styles\");\n    shapeLayersCheckbox.setState(defaultShapes);\n\n    const defaultOverrides = (sketch.Settings.settingForKey('lsToggledOverrides') == 0) ? NSOffState : NSOnState;\n    overridesCheckbox.setButtonType(NSSwitchButton);\n    overridesCheckbox.setBezelStyle(0);\n    overridesCheckbox.setTitle(\"Symbol Overrides\");\n    overridesCheckbox.setState(defaultOverrides);\n\n    const defaultGroups = (sketch.Settings.settingForKey('lsToggledGroups') == 0) ? NSOffState : NSOnState;\n    groupsCheckbox.setButtonType(NSSwitchButton);\n    groupsCheckbox.setBezelStyle(0);\n    groupsCheckbox.setTitle(\"Groups\");\n    groupsCheckbox.setState(defaultOverrides);\n\n    // Add checkbox\n    view.addSubview(artboardsCheckbox);\n    view.addSubview(symbolsCheckbox);\n    view.addSubview(textLayersCheckbox);\n    view.addSubview(shapeLayersCheckbox);\n    view.addSubview(overridesCheckbox);\n    view.addSubview(groupsCheckbox);\n\n\n  // Show the dialog window\n  return [alert];\n}\n\n\n\nexport function updateSettings() {\n\n  // Set default color for artboard backgrounds\n  sketch.Settings.setSettingForKey('lsLightBgColor', (\"#\" + hexLight.replace('#', '')));\n  sketch.Settings.setSettingForKey('lsDarkBgColor', (\"#\" + hexDark.replace('#', '')));\n\n  // Set toggle for switchable layers\n  sketch.Settings.setSettingForKey('lsToggledArtboards', artboardsCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledSymbols', symbolsCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledTextLayers', textLayersCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledShapes', shapeLayersCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledOverrides', overridesCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledGroups', groupsCheckbox);\n}\n\nexport function resetSettings() {\n  sketch.Settings.setSettingForKey('lsLightBgColor', '#ffffff');\n  sketch.Settings.setSettingForKey('lsDarkBgColor', '#000000');\n\n  sketch.Settings.setSettingForKey('lsToggledArtboards', 1);\n  sketch.Settings.setSettingForKey('lsToggledSymbols', 1);\n  sketch.Settings.setSettingForKey('lsToggledTextLayers', 1);\n  sketch.Settings.setSettingForKey('lsToggledShapes', 1);\n  sketch.Settings.setSettingForKey('lsToggledOverrides', 1);\n  sketch.Settings.setSettingForKey('lsToggledGroups', 1);\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}