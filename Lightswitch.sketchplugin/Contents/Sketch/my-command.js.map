{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/my-command.js","webpack://exports/./src/settings.js","webpack://exports/external \"sketch\""],"names":["console","clear","time","sketch","require","document","getSelectedDocument","selection","selectedLayers","selectedCount","layers","length","themeSet","themeFrom","setIdx","fromIdx","changeNo","librarySymbols","libraryTextStyles","libraryLayerStyles","librarySymbolRefs","libraryTextRefs","libraryLayerRefs","libraries","getLibraries","filter","i","enabled","valid","libraryIds","map","id","defaultBgLight","Settings","settingForKey","defaultBgDark","settingArtboards","settingSymbols","settingText","settingShapes","settingOverrides","timeEnd","setLight","UI","message","forEach","switchThemes","feedback","setDark","libraryImporter","idx","layerType","libActive","getImportableSymbolReferencesForDocument","name","toUpperCase","replace","getImportableTextStyleReferencesForDocument","getImportableLayerStyleReferencesForDocument","layer","type","background","Boolean","color","newSymbolMaster","symbolParser","master","symbolId","overrides","isDefault","includes","overrideParser","newSharedTextStyle","textParser","sharedStyle","style","syncWithSharedStyle","newSharedLayerStyle","shapeParser","layerMaster","customFrom","customSet","invertedName","getLibrary","libraryIndex","indexOf","masterIndex","import","getSymbols","find","instance","filteredOverrides","test","property","override","index","instanceId","masterId","masterCorrected","defaultMasterValue","value","setOverrideValue","layerStyle","invertedTextStyleName","sharedTextStyles","invertedLayerStyleName","sharedLayerStyles","themeEmoji","context","reloadInspector","page","selectedPage","textFieldLight","textFieldDark","hexLight","hexDark","artboardsCheckbox","symbolsCheckbox","textLayersCheckbox","shapeLayersCheckbox","overridesCheckbox","getInputFromUser","window","createWindow","alert","response","runModal","stringValue","trim","updateSettings","resetSettings","COSAlertWindow","new","setMessageText","addButtonWithTitle","viewWidth","viewHeight","viewSpacer","view","NSView","alloc","initWithFrame","NSMakeRect","addAccessoryView","infoLabel","NSTextField","lightBgLabel","darkBgLabel","toggleLabel","setStringValue","setSelectable","setEditable","setBezeled","setDrawsBackground","addSubview","defaultLightBg","defaultDarkBg","NSButton","defaultArtboard","NSOffState","NSOnState","setButtonType","NSSwitchButton","setBezelStyle","setTitle","setState","defaultSymbols","defaultTextLayers","defaultShapes","defaultOverrides","setSettingForKey"],"mappings":"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","file":"my-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/my-command.js\");\n","console.clear();\nconsole.time(\"alpha\");\nconsole.time(\"total runtime\");\n// import sketch from 'sketch'\nconst sketch = require('sketch');\nconst document = sketch.getSelectedDocument();\nconst selection = document.selectedLayers;\nconst selectedCount = selection.layers.length;\n\nimport { getInputFromUser } from \"./settings.js\";\n\n// Initialise variables and setup library indexes\nvar themeSet, themeFrom, setIdx, fromIdx, changeNo = 0;\nvar librarySymbols = {}, libraryTextStyles = {}, libraryLayerStyles = {};\nvar librarySymbolRefs = {}, libraryTextRefs = {}, libraryLayerRefs = {};\nconst libraries = sketch.getLibraries().filter(i => i.enabled && i.valid);\nconst libraryIds = libraries.map(i => i.id);\n\n// Pull in plugin settings\nconst defaultBgLight = ((sketch.Settings.settingForKey('lsLightBgColor')) + \"ff\") || \"#ffffffff\";\nconst defaultBgDark = ((sketch.Settings.settingForKey('lsDarkBgColor')) + \"ff\") || \"#000000ff\";\nconst settingArtboards = sketch.Settings.settingForKey('lsToggledArtboards') > 0 ? true : false;\nconst settingSymbols = sketch.Settings.settingForKey('lsToggledSymbols') > 0 ? true : false;\nconst settingText = sketch.Settings.settingForKey('lsToggledTextLayers') > 0 ? true : false;\nconst settingShapes = sketch.Settings.settingForKey('lsToggledShapes') > 0 ? true : false;\nconst settingOverrides = sketch.Settings.settingForKey('lsToggledOverrides') > 0 ? true : false;\n\nconsole.time('debug');\n\nconsole.timeEnd(\"alpha\");\n\nexport function setLight () {\n  themeSet = 'LIGHT';\n  themeFrom = 'DARK';\n  setIdx = '1';\n  fromIdx = '2';\n  if (selectedCount === 0) {\n    sketch.UI.message('No layers selected');\n  } else {\n    selection.forEach(switchThemes);\n    feedback('🌕');\n  }\n}\n\nexport function setDark () {\n  themeSet = 'DARK';\n  themeFrom = 'LIGHT';\n  setIdx = '2';\n  fromIdx = '1';\n  if (selectedCount === 0) {\n    sketch.UI.message('No layers selected');\n  } else {\n    selection.forEach(switchThemes);\n    feedback('🌑');\n  }\n}\n\n\n// Add specific library references when needed\nexport function libraryImporter(idx, layerType) {\n  var libActive;\n  switch (layerType) {\n      case ('SymbolMaster'):\n        libActive = (librarySymbolRefs[idx]) ? true : false;\n        //libActive = (sketch.Settings.sessionVariable('storedLibrarySymbols')[idx]) ? true : false;\n        //console.log(libActive);\n        if (libActive) return;\n        librarySymbols[idx] = libraries[idx].getImportableSymbolReferencesForDocument(document);\n        librarySymbolRefs[idx] = librarySymbols[idx].map(i => i.name.toUpperCase().replace(/\\s/g,''));\n        //sketch.Settings.setSessionVariable('storedLibrarySymbols', librarySymbolRefs);\n        //console.log(sketch.Settings.sessionVariable('storedLibrarySymbols').length);\n        break;\n      case ('Text'):\n        libActive = (libraryTextRefs[idx]) ? true : false;\n        if (libActive) return;\n        libraryTextStyles[idx] = libraries[idx].getImportableTextStyleReferencesForDocument(document);\n        libraryTextRefs[idx] = libraryTextStyles[idx].map(i => i.name.toUpperCase().replace(/\\s/g,''));\n        break;\n      case ('ShapePath'):\n        libActive = (libraryLayerRefs[idx]) ? true : false;\n        if (libActive) return;\n        libraryLayerStyles[idx] = libraries[idx].getImportableLayerStyleReferencesForDocument(document);\n        libraryLayerRefs[idx] = libraryLayerStyles[idx].map(i => i.name.toUpperCase().replace(/\\s/g,''));\n        break;\n  }\n}\n\nexport function switchThemes (layer) {\nconsole.timeEnd('debug');\nconsole.time('debug');\n  if (layer.layers && layer.layers.length) {\n\n    // Change Artboard colors from Light to Dark\n    if (((layer.type === 'Artboard') || (layer.type === 'SymbolMaster')) && (layer.background.enabled) && (settingArtboards) && ((Boolean(layer.background.color == defaultBgLight)) || (Boolean(layer.background.color == defaultBgDark)))) {\n      layer.background.color = (themeSet === 'DARK') ? defaultBgDark : defaultBgLight;\n    }\n\n\n    // iterate through child layers\n    layer.layers.forEach(switchThemes);\n\n  } else {\n\n    switch (layer.type) {\n      case ('SymbolInstance'):\n        if (!settingSymbols) break;\n        let newSymbolMaster = symbolParser(layer.master);\n        if (!newSymbolMaster) break;\n        layer.symbolId = newSymbolMaster.symbolId;\n        layer.name = (layer.name.toUpperCase().replace(/\\s/g,'').replace(themeFrom, themeSet) == newSymbolMaster.name.toUpperCase().replace(/\\s/g,'')) ? newSymbolMaster.name : layer.name;\n        changeNo++;\n        if (layer.overrides.map(i => i.isDefault).includes(false) && settingOverrides) overrideParser(layer);\n        break;\n      case ('Text'):\n        if (!settingText) break;\n        let newSharedTextStyle = textParser(layer.sharedStyle);\n        if (!newSharedTextStyle) break;\n        layer.sharedStyle = newSharedTextStyle;\n        layer.style.syncWithSharedStyle(newSharedTextStyle);\n        changeNo++;\n        break;\n      case ('ShapePath'):\n        if (!settingShapes) break;\n        let newSharedLayerStyle = shapeParser(layer.sharedStyle);\n        if (!newSharedLayerStyle) break;\n        layer.sharedStyle = newSharedLayerStyle;\n        layer.style.syncWithSharedStyle(newSharedLayerStyle);\n        changeNo++;\n        break;\n      default:\n        return;\n    }\n  }\n}\n\n// Iterate through Symbols\nexport function symbolParser(layerMaster) {\n\n  // Check symbol master is eligible\n  if (!layerMaster.name.toUpperCase().includes(themeFrom)) return;\n\n  // Check for enumerated naming - i.e. 1 Light and 2 Dark\n  let customFrom = themeFrom;\n  let customSet = themeSet;\n  if (layerMaster.name.toUpperCase().replace(/\\s/g,'').includes(fromIdx + themeFrom)) {\n      customFrom = fromIdx + themeFrom;\n      customSet = setIdx + themeSet;\n  }\n\n\n  // Create name for inverted symbol master\n  let invertedName = layerMaster.name.toUpperCase().replace(/\\s/g,'').replace(customFrom, customSet);\n\n\n  // Search for library symbols\n  if (layerMaster.getLibrary() && layerMaster.getLibrary().enabled) {\n\n    // Return matching symbol master from library\n    let libraryIndex = libraryIds.indexOf(layerMaster.getLibrary().id);\n    libraryImporter(libraryIndex, layerMaster.type);\n    let masterIndex = librarySymbolRefs[libraryIndex].indexOf(invertedName);\n    if (masterIndex < 0) return;\n\n    return librarySymbols[libraryIndex][masterIndex].import();\n    //return libraries[libraryIndex].getImportableSymbolReferencesForDocument(document)[masterIndex].import()\n\n  // Search for local symbols with an inverse counterpart\n  } else if (document.getSymbols().filter(i => !i.getLibrary()).find(i => i.name.toUpperCase().replace(/\\s/g,'') === invertedName)) {\n    // Return local symbol master\n    return document.getSymbols().find(i => !i.getLibrary() && i.name.toUpperCase().replace(/\\s/g,'') === invertedName);\n  }\n}\n\n// Iterate through the Overrides of passed Symbol Instance\nexport function overrideParser(instance) {\n\n  // Filter overrides to just non-defaults + text/layer styles\n  var filteredOverrides = instance.overrides.filter(i => !i.isDefault && /^(layerStyle|textStyle)$/.test(i.property));\n\n  // Iterate through filtered overrides and reset values\n  filteredOverrides.forEach((override, index) => {\n    let instanceId = instance.overrides.map(i => i.id).indexOf(override.id);\n    let masterId = instance.master.overrides.map(i => i.id).indexOf(override.id);\n    let masterCorrected = (masterId >= 0) ? masterId : 0;\n\n    let defaultMasterValue = instance.master.overrides[masterCorrected].value;\n    instance.setOverrideValue(instance.overrides[instanceId], defaultMasterValue);\n  });\n\n}\n\n\n// Iterate through Shared Text Styles\nexport function textParser(layerStyle) {\n\n  // Check shared text-style is eligible\n  if (!layerStyle) return;\n  if (!layerStyle.name.toUpperCase().includes(themeFrom)) return;\n\n  // Check for enumerated naming - i.e. 1 Light and 2 Dark\n  let customFrom = themeFrom;\n  let customSet = themeSet;\n  if (layerStyle.name.toUpperCase().replace(/\\s/g,'').includes(fromIdx + themeFrom)) {\n      customFrom = fromIdx + themeFrom;\n      customSet = setIdx + themeSet;\n  }\n  //\n\n  // Create inverted shared-style name\n  let invertedTextStyleName = layerStyle.name.toUpperCase().replace(/\\s/g,'').replace(customFrom, customSet);\n\n  // Search for library text-styles\n  if (layerStyle.getLibrary() && layerStyle.getLibrary().enabled) {\n\n    // Return matching Text Styles from library\n    let libraryIndex = libraryIds.indexOf(layerStyle.getLibrary().id);\n    libraryImporter(libraryIndex, 'Text');\n    let masterIndex = libraryTextRefs[libraryIndex].indexOf(invertedTextStyleName);\n    if (masterIndex < 0) return;\n\n    return libraryTextStyles[libraryIndex][masterIndex].import();\n\n  // Search for local text styles with an inverse counterpart\n  } else if (document.sharedTextStyles.filter(i => !i.getLibrary()).find(i => i.name.toUpperCase().replace(/\\s/g,'') === invertedTextStyleName)) {\n      // Return local shared text-style\n      return document.sharedTextStyles.find(i => !i.getLibrary() && i.name.toUpperCase().replace(/\\s/g,'') === invertedTextStyleName);\n  }\n}\n\n\n// Iterate through Shared Layer Styles\nexport function shapeParser(layerStyle) {\n  // Check shared layer-style is eligible\n  if (!layerStyle) return;\n  if (!layerStyle.name.toUpperCase().includes(themeFrom)) return;\n\n  // Check for iOS UI kit exceptions\n  let customFrom = themeFrom;\n  let customSet = themeSet;\n  if ((layerStyle.name.includes('iOS System Backgrounds')) && (themeSet === 'DARK')) {\n        customSet = 'DARK - BASE';\n  } else if ((layerStyle.name.includes('iOS System Backgrounds')) && (themeSet === 'LIGHT')) {\n        customFrom = 'DARK - BASE';\n  } else if (layerStyle.name.toUpperCase().replace(/\\s/g,'').includes(fromIdx + themeFrom)) {\n      customFrom = fromIdx + themeFrom;\n      customSet = setIdx + themeSet;\n  }\n  //\n\n  // Create inverted shared style name\n  let invertedLayerStyleName = layerStyle.name.toUpperCase().replace(/\\s/g,'').replace(customFrom, customSet);\n\n  // Search for library layer-styles\n  if (layerStyle.getLibrary() && layerStyle.getLibrary().enabled) {\n\n    // Return matching Text Styles from library\n    let libraryIndex = libraryIds.indexOf(layerStyle.getLibrary().id);\n    libraryImporter(libraryIndex, 'ShapePath');\n    let masterIndex = libraryLayerRefs[libraryIndex].indexOf(invertedLayerStyleName);\n    if (masterIndex < 0) return;\n\n    return libraryLayerStyles[libraryIndex][masterIndex].import();\n\n  // Search for local layer styles with an inverse counterpart\n  } else if (document.sharedLayerStyles.filter(i => !i.getLibrary()).find(i => i.name.toUpperCase().replace(/\\s/g,'') === invertedLayerStyleName)) {\n\n      // Return local shared text style\n      return document.sharedLayerStyles.find(i => !i.getLibrary() && i.name.toUpperCase().replace(/\\s/g,'') === invertedLayerStyleName);\n  }\n}\n\nexport function feedback (themeEmoji) {\n  if (changeNo > 0) {\n    sketch.UI.message(`${themeEmoji} ${changeNo} layers converted to ${themeSet} mode`);\n    context.document.reloadInspector();\n    console.timeEnd('total runtime');\n} else {\n    sketch.UI.message('No eligible layers selected');\n  }\n}\n","const sketch = require('sketch');\nconst document = sketch.getSelectedDocument();\nconst page = document.selectedPage;\nconst selection = document.selectedLayers;\n\nvar textFieldLight, textFieldDark;\nvar hexLight, hexDark;\nvar artboardsCheckbox, symbolsCheckbox, textLayersCheckbox, shapeLayersCheckbox, overridesCheckbox;\n\nexport function getInputFromUser(context){\n  // Create and show dialog window\n  var window = createWindow(context);\n  var alert = window[0];\n  var response = alert.runModal();\n  if (response == \"1000\") {\n\n    // Artboard background colours\n    hexLight = textFieldLight.stringValue();\n    hexDark = textFieldDark.stringValue();\n\n    // Validate colours for valid hex strings\n    if ((!/^[0-9A-F]{6}$/i.test(hexLight.trim().replace('#', ''))) || (!/^[0-9A-F]{6}$/i.test(hexDark.trim().replace('#', '')))) {\n      sketch.UI.alert('Cannot Save Changes', 'Invalid background color entered for Artboards');\n      getInputFromUser();\n      return;\n    }\n\n    // Toggle checkboxes\n    artboardsCheckbox = artboardsCheckbox.stringValue();\n    symbolsCheckbox = symbolsCheckbox.stringValue();\n    textLayersCheckbox = textLayersCheckbox.stringValue();\n    shapeLayersCheckbox = shapeLayersCheckbox.stringValue();\n    overridesCheckbox = overridesCheckbox.stringValue();\n\n    updateSettings();\n\n    return true;\n  } else if (response == \"1001\") {\n      resetSettings();\n      return false;\n  } else if (response == \"1002\") {\n      return false;\n  }\n}\n\nexport function createWindow() {\n\n  var alert = COSAlertWindow.new();\n\n  //alert.setIcon(NSImage.alloc().initByReferencingFile(context.plugin.urlForResourceNamed('icon.png').path()));\n  alert.setMessageText(\"Lightswitch Settings\");\n\n  // Creating dialog buttons\n  alert.addButtonWithTitle(\"Save\");\n  alert.addButtonWithTitle(\"Reset\");\n  alert.addButtonWithTitle(\"Cancel\");\n\n  // Creating the view\n  var viewWidth = 300;\n  var viewHeight = 205;\n  var viewSpacer = 10;\n  var view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight));\n  alert.addAccessoryView(view);\n\n  // Create and configure your inputs here\n  // ...\n\n  // Create labels\n    var infoLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 52, (viewWidth - 30), 55));\n    var lightBgLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 105, (viewWidth - 30), 55));\n    var darkBgLabel = NSTextField.alloc().initWithFrame(NSMakeRect(140, viewHeight - 105, (viewWidth - 30), 55));\n    var toggleLabel = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 163, (viewWidth - 30), 55));\n\n    // Configure labels\n    infoLabel.setStringValue(\"Change default light/dark Artboard colors and disable switching specific layer types.\");\n    infoLabel.setSelectable(false);\n    infoLabel.setEditable(false);\n    infoLabel.setBezeled(false);\n    infoLabel.setDrawsBackground(false);\n\n    lightBgLabel.setStringValue(\"Light BG Color\");\n    lightBgLabel.setSelectable(false);\n    lightBgLabel.setEditable(false);\n    lightBgLabel.setBezeled(false);\n    lightBgLabel.setDrawsBackground(false);\n\n    darkBgLabel.setStringValue(\"Dark BG Color\");\n    darkBgLabel.setSelectable(false);\n    darkBgLabel.setEditable(false);\n    darkBgLabel.setBezeled(false);\n    darkBgLabel.setDrawsBackground(false);\n\n    toggleLabel.setStringValue(\"Switch Toggles:\");\n    toggleLabel.setSelectable(false);\n    toggleLabel.setEditable(false);\n    toggleLabel.setBezeled(false);\n    toggleLabel.setDrawsBackground(false);\n\n  // Add labels to window\n    view.addSubview(infoLabel);\n    view.addSubview(lightBgLabel);\n    view.addSubview(darkBgLabel);\n    view.addSubview(toggleLabel);\n\n\n\n  // Create text fields\n    textFieldLight = NSTextField.alloc().initWithFrame(NSMakeRect(0, viewHeight - 90, 120, 20));\n    textFieldDark = NSTextField.alloc().initWithFrame(NSMakeRect(140, viewHeight - 90, 120, 20));\n\n\n    // Optional: Make TAB key work to switch between textfields\n    //[textFieldLight setNextKeyView:textFieldDark];\n    //[textFieldDark setNextKeyView:textFieldLight];\n\n\n    // Add text fields to window\n    view.addSubview(textFieldLight);\n    view.addSubview(textFieldDark);\n\n\n    // Default text values\n    const defaultLightBg = sketch.Settings.settingForKey('lsLightBgColor') || '#ffffff';\n    const defaultDarkBg = sketch.Settings.settingForKey('lsDarkBgColor') || '#000000';\n    textFieldLight.setStringValue(defaultLightBg);\n    textFieldDark.setStringValue(defaultDarkBg);\n\n\n\n  // Create checkbox\n    artboardsCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 150, viewWidth - viewSpacer, 20));\n    symbolsCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(140, viewHeight - 150, viewWidth - viewSpacer, 20));\n    textLayersCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 172.5, viewWidth - viewSpacer, 20));\n    shapeLayersCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(140, viewHeight - 172.5, viewWidth - viewSpacer, 20));\n    overridesCheckbox = NSButton.alloc().initWithFrame(NSMakeRect(0, viewHeight - 195, viewWidth - viewSpacer, 20));\n\n\n    // Configure checkboxes\n    const defaultArtboard = (sketch.Settings.settingForKey('lsToggledArtboards') == 0) ? NSOffState : NSOnState;\n    artboardsCheckbox.setButtonType(NSSwitchButton);\n    artboardsCheckbox.setBezelStyle(0);\n    artboardsCheckbox.setTitle(\"Artboards\");\n    artboardsCheckbox.setState(defaultArtboard);\n\n    const defaultSymbols = (sketch.Settings.settingForKey('lsToggledSymbols') == 0) ? NSOffState : NSOnState;\n    symbolsCheckbox.setButtonType(NSSwitchButton);\n    symbolsCheckbox.setBezelStyle(0);\n    symbolsCheckbox.setTitle(\"Symbols\");\n    symbolsCheckbox.setState(defaultSymbols);\n\n    const defaultTextLayers = (sketch.Settings.settingForKey('lsToggledTextLayers') == 0) ? NSOffState : NSOnState;\n    textLayersCheckbox.setButtonType(NSSwitchButton);\n    textLayersCheckbox.setBezelStyle(0);\n    textLayersCheckbox.setTitle(\"Text Styles\");\n    textLayersCheckbox.setState(defaultTextLayers);\n\n    const defaultShapes = (sketch.Settings.settingForKey('lsToggledShapes') == 0) ? NSOffState : NSOnState;\n    shapeLayersCheckbox.setButtonType(NSSwitchButton);\n    shapeLayersCheckbox.setBezelStyle(0);\n    shapeLayersCheckbox.setTitle(\"Shape Styles\");\n    shapeLayersCheckbox.setState(defaultShapes);\n\n    const defaultOverrides = (sketch.Settings.settingForKey('lsToggledOverrides') == 0) ? NSOffState : NSOnState;\n    overridesCheckbox.setButtonType(NSSwitchButton);\n    overridesCheckbox.setBezelStyle(0);\n    overridesCheckbox.setTitle(\"Symbol Overrides\");\n    overridesCheckbox.setState(defaultOverrides);\n\n    // Add checkbox\n    view.addSubview(artboardsCheckbox);\n    view.addSubview(symbolsCheckbox);\n    view.addSubview(textLayersCheckbox);\n    view.addSubview(shapeLayersCheckbox);\n    view.addSubview(overridesCheckbox);\n\n\n  // Show the dialog window\n  return [alert];\n}\n\n\n\nexport function updateSettings() {\n\n  // Set default color for artboard backgrounds\n  sketch.Settings.setSettingForKey('lsLightBgColor', (\"#\" + hexLight.replace('#', '')));\n  sketch.Settings.setSettingForKey('lsDarkBgColor', (\"#\" + hexDark.replace('#', '')));\n\n  // Set toggle for switchable layers\n  sketch.Settings.setSettingForKey('lsToggledArtboards', artboardsCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledSymbols', symbolsCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledTextLayers', textLayersCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledShapes', shapeLayersCheckbox);\n  sketch.Settings.setSettingForKey('lsToggledOverrides', overridesCheckbox);\n}\n\nexport function resetSettings() {\n  sketch.Settings.setSettingForKey('lsLightBgColor', '#ffffff');\n  sketch.Settings.setSettingForKey('lsDarkBgColor', '#000000');\n\n  sketch.Settings.setSettingForKey('lsToggledArtboards', 1);\n  sketch.Settings.setSettingForKey('lsToggledSymbols', 1);\n  sketch.Settings.setSettingForKey('lsToggledTextLayers', 1);\n  sketch.Settings.setSettingForKey('lsToggledShapes', 1);\n  sketch.Settings.setSettingForKey('lsToggledOverrides', 1);\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}